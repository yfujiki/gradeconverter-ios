# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.49.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    # increment_build_number

    # xctool # run the tests of your app
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end

  ####### Screenshots #######
  desc "Get all screenshots"
  lane :screenshots do
    snapshot
  end

  ####### Deployment #######
  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do |options|
    increment_build_number
    target = options[:target] || "free"
    app_id = (target == "free") ? "com.yfujiki.gradeconverter" : "com.yfujiki.gradeconverterpro"
    scheme = (target == "free") ? "Grade Converter" : "Grade Converter Pro"
    sigh(app_identifier: app_id)
    gym(scheme: scheme)
    pilot(app_identifier: app_id, team_id: '1295261')
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do |options|
    # snapshot
    increment_build_number
    target = options[:target] || "free"
    app_id = (target == "free") ? "com.yfujiki.gradeconverter" : "com.yfujiki.gradeconverterpro"
    scheme = (target == "free") ? "Grade Converter" : "Grade Converter Pro"
    sigh(app_identifier: app_id)
    gym(scheme: scheme)
    deliver(force: true, team_id: '1295261')
    # frameit
  end

  desc "Create archive for App Store/TestFlight"
  lane :archive do |options|
    increment_build_number
    target = options[:target] || "free"
    app_id = (target == "free") ? "com.yfujiki.gradeconverter" : "com.yfujiki.gradeconverterpro"
    scheme = (target == "free") ? "Grade Converter" : " Grade Converter Pro"
    sigh(app_identifier: app_id)
    gym(scheme: scheme)
    # You can define as many lanes as you want
  end

  ####### Testing #######
  desc "Runs all the tests"
  lane :tests do
    unit_tests
    ui_tests
  end

  desc "Runs all unit tests"
  lane :unit_tests do
    scan(
      workspace: "Grade Converter.xcworkspace",
      scheme: "Unit Test",
      devices: ["iPhone Xs"],
      clean: true
    )
  end

  desc "Runs all ui tests"
  lane :ui_tests do
    scan(
      workspace: "Grade Converter.xcworkspace",
      scheme: "UI Test",
      devices: ["iPhone Xs Max", "iPhone X", "iPhone 8 Plus", "iPhone 7", "iPhone SE"],
      clean: true
    )
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
